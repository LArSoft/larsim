BEGIN_PROLOG

#for now the parameter sets for the different experiments are all the same

standard_largeantparameters:
{
 OpticalSimVerbosity:      0       #verbosity of optical simulation, soon to be depricated
 ParticleKineticEnergyCut: 0.01e-3  #in GeV
 StoreTrajectories:        true
 VisualizationEnergyCut:   10.e-3  #depricated, in GeV
 VisualizeNeutrals:        false   #depricated
 UseCustomPhysics:         false   #Whether to use a custom list of physics processes or the default
 ModifyProtonCut:          false   #Whether to modify the default proton cut
 NewProtonCut:             0.0     #new ProtonCut value, ModifyProtonCut must be set to set new value
 KeepEMShowerDaughters:    false   #save secondary, tertiary, etc particles in EM showers
 LongitudinalDiffusion:    6.2e-9  #in cm^2/ns
 TransverseDiffusion:      16.3e-9 #in cm^2/ns
 ElectronClusterSize:      600.0   #number of ionization electrons to drift in a unit
 MinNumberOfElCluster:     0	   #minimum number of electron clusters
 EnabledPhysics:           [ "Em", "SynchrotronAndGN", "Ion", "Hadron",
                             "Decay", "HadronElastic", "Stopping", "NeutronTrackingCut" ]
 CosmogenicK0Bias:         0 # 0 is off. N is the number of secondaries to produce.
 CosmogenicXSMNBiasOn:     0 # 0 is off. 1 works. 2 still in development.
 CosmogenicXSMNBiasFactor: 1 # Not more than 5-ish cuz of numerical instabilities.
 DisableWireplanes:        false #if set true, charge drift simulation does not run - used for optical sim jobs OR just when you don't wanna drift the e's.
 SkipWireSignalInTPCs:     []    # put here TPC id's which should not receive ionization electrons - used to simulate TPC geom volumes which are actually dead LAr volumes in protoDUNE
 UseModBoxRecomb:          true  # use Modified Box recombination instead of Birks
 UseEllipsModBoxRecomb:    false # use Ellipsoid Modified Box recomination instead of Birks
 UseModLarqlRecomb:        false # use LArQL recombination corrections (dependence on EF)

 #* Recombination factor coefficients come from Nucl.Instrum.Meth.A523:275-286,2004
 #* * @f$ dE/dx @f$ is given by the voxel energy deposition, but have to convert it to MeV/cm from GeV/voxel width
 #* * electric field: @f$ E @f$ in kV/cm
 #* * @f$ R = A/(1 + (dE/dx)*k/E) @f$
 #* * @f$ A = 0.800 \pm 0.003 @f$
 #* * @f$ k = 0.0486 @f$ needs to be scaled with Electric field
 RecombA: 0.800      #< _A_ constant.
 Recombk: 0.0486     #< _k_ constant, in g/(MeV cm&sup2;)*kV/cm.

 #* Recombination factor coefficients come from Nucl.Instrum.Meth.A523:275-286,2004
 #* * @f$ dE/dx @f$ is given by the voxel energy deposition, but have to convert it to MeV/cm from GeV/voxel width
 #* * electric field: @f$ E @f$ in kV/cm
 #* * `kModBoxB` needs to be scaled with the electric field.
 ModBoxA: 0.930
 ModBoxB: 0.212

 #* Recombination factor coefficients come from Gray Putnam 
 #* * @f$ dE/dx @f$ is given by the voxel energy deposition, but have to convert it to MeV/cm from GeV/voxel width
 #* * electric field: @f$ E @f$ in kV/cm
 #* * `EllipsModBoxB` needs to be scaled with the electric field.
 EllipsModBoxA: 0.906 # +/- 0.008 
 EllipsModBoxB: 0.203 # +/- 0.008
 EllipsModBoxR: 1.25  # +/- 0.02

 #* Recombination factor coefficients for LArQL
 #* https://doi.org/10.1088/1748-0221/17/07/C07009
 #* * @f$ dE/dx @f$ is given by the energy deposition in MeV/cm
 #* * electric field: @f$ E @f$ in kV/cm
 LarqlChi0A: 0.00338427
 LarqlChi0B: -6.57037
 LarqlChi0C: 1.88418
 LarqlChi0D: 0.000129379
 LarqlAlpha: 0.0372
 LarqlBeta: 0.0124

  #* alpha particle quenching factor
  #* Doke et al. Jpn. J. Appl. Phys. Vol. 41 (2002) pp. 1538
 QAlpha: 0.72

  #* ion+excitation work function in eV
  #* https://doi.org/10.1016/0168-9002(90)90011-T
 Wph: 19.5

 # The following parameters specify details of wireplanes or similar
 # areas with optically parameterized transmissions (Ben J 2013)

 #  volume names to be associated with an optical wireplane model
 OpticalParamVolumes:      ["volTPCPlaneVert_PV"]

 #  specification of which model to use for each volume
 OpticalParamModels:       ["OverlaidWireplanes"]

 # orientation of each wireplane set
 #  0 = Xdrift, 1 = Ydrift, 2 = Zdrift
 OpticalParamOrientations: [0]

 # This a set of floats which is specific to the particular model used.
 # For overlaid wireplanes, should be a vector of vectors of
 #                                 [plane angle, pitch/mm, wire diameter/mm]
 #
 # This format is chosen to allow for future extensions to the model
 #  for, eg, DUNE wireplane development.
 #
 OpticalParamParameters:   [ [ [60,  3, 0.15],
 	 		       [-60, 3, 0.15],
                               [0,   3, 0.15] ] ]
 UseLitePhotons: false
}

jp250L_largeantparameters:     @local::standard_largeantparameters
bo_largeantparameters:         @local::standard_largeantparameters
argoneut_largeantparameters:   @local::standard_largeantparameters
# The following line is already in simulationservices_microboone.fcl
# and so it should not also be included here, for clarity's sake.
#microboone_largeantparameters: @local::standard_largeantparameters
dune35t_largeantparameters:    @local::standard_largeantparameters
dunefd_largeantparameters:   @local::standard_largeantparameters

standard_larvoxelcalculator:
{
 VoxelSizeX:     0.03    #in cm
 VoxelSizeY:     0.03    #in cm
 VoxelSizeZ:     0.03    #in cm
 VoxelSizeT:     5000.0  #in ns
 VoxelOffsetX:   0.0     #in cm
 VoxelOffsetY:   0.0     #in cm
 VoxelOffsetZ:   0.0     #in cm
 VoxelOffsetT:   -2500.0 #in ns
 VoxelEnergyCut: 1.e-6   #in GeV
}

bo_larvoxelcalculator:         @local::standard_larvoxelcalculator
jp250L_larvoxelcalculator:     @local::standard_larvoxelcalculator
argoneut_larvoxelcalculator:   @local::standard_larvoxelcalculator
# The following line is already in simulationservices_microboone.fcl
# and so it should not also be included here, for clarity's sake.
#microboone_larvoxelcalculator: @local::standard_larvoxelcalculator
dune35t_larvoxelcalculator:    @local::standard_larvoxelcalculator
dunefd_larvoxelcalculator:     @local::standard_larvoxelcalculator

END_PROLOG
