#include "services_refactored_pdune.fcl"
#include "LArG4_dune.fcl"
#include "IonAndScint_dune.fcl"
#include "PDFastSim_dune.fcl"

#include "DiscretizeEdeps.fcl"

process_name: Discretize

services:
{
  TFileService: { fileName: "g4_protodunehd_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info

  @table::protodunehd_refactored_simulation_services

  NuRandomService:       @local::dune_prod_seedservice
}

source:
{
  module_type: RootInput
  maxEvents:  30000
  fileNames: ["gen_protodunehd.root"]
}

physics:
{
  producers:
  {
    IonAndScint:  @local::protodunehd_ionandscint
    IonAndScintExternal: @local::protodunehd_ionandscint_external
    PDFastSim:    @local::protodune_hd_pdfastsim_par
    PDFastSimExternal: @local::protodune_hd_pdfastsim_pvs_external
    rns: {module_type: "RandomNumberSaver"}
    Discretize: @local::discretize

  }
  simulate:      [ rns, IonAndScint, IonAndScintExternal, Discretize, PDFastSim, PDFastSimExternal]

  stream1:       [ out1 ]

  trigger_paths: [  simulate ] 
  end_paths:     [  stream1  ]  
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "%ifb_discretized.root"
    dataTier:    "simulated"
    outputCommands: [ "keep *", "drop sim::SimEnergyDeposits_largeant_*_G4*"]
    compressionLevel: 1 #zlib argument (0-9) 
  }
}

services.NuRandomService.policy: "random"
physics.producers.Discretize.EDepLabel: "IonAndScint"
physics.producers.PDFastSim.SimulationLabel: "Discretize"
physics.producers.PDFastSim.Verbose: true
#physics.producers.PDFastSim.ScintTimeTool.SlowRisingTime: -1.
#physics.producers.PDFastSim.ScintTimeTool.FastRisingTime: -1.